{"version":3,"sources":["PanResponderAdapter.tsx"],"names":["React","Animated","PanResponder","Keyboard","StyleSheet","I18nManager","View","useAnimatedValue","DEAD_ZONE","DefaultTransitionSpec","timing","spring","stiffness","damping","mass","overshootClamping","PanResponderAdapter","layout","keyboardDismissMode","swipeEnabled","navigationState","onIndexChange","onSwipeStart","onSwipeEnd","children","style","routes","index","panX","listenersRef","useRef","navigationStateRef","layoutRef","onIndexChangeRef","currentIndexRef","pendingIndexRef","swipeVelocityThreshold","swipeDistanceThreshold","width","jumpToIndex","useCallback","offset","current","transitionConfig","parallel","toValue","useNativeDriver","start","finished","setTimeout","undefined","useEffect","setValue","dismiss","isMovingHorizontally","_","gestureState","Math","abs","dx","dy","vx","vy","canMoveScreen","event","diffX","isRTL","length","startGesture","stopAnimation","setOffset","_value","respondToGesture","position","_offset","next","ceil","floor","forEach","listener","finishGesture","flattenOffset","currentIndex","nextIndex","round","min","max","isFinite","addEnterListener","push","indexOf","splice","jumpTo","key","findIndex","route","panResponder","create","onMoveShouldSetPanResponder","onMoveShouldSetPanResponderCapture","onPanResponderGrant","onPanResponderMove","onPanResponderTerminate","onPanResponderRelease","onPanResponderTerminationRequest","maxTranslate","translateX","multiply","interpolate","inputRange","outputRange","extrapolate","divide","Value","render","styles","sheet","transform","panHandlers","Children","map","child","i","focused","absoluteFill","flex","flexDirection","alignItems"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  PanResponder,\n  Keyboard,\n  StyleSheet,\n  GestureResponderEvent,\n  PanResponderGestureState,\n  I18nManager,\n  View,\n} from 'react-native';\nimport useAnimatedValue from './useAnimatedValue';\nimport type {\n  NavigationState,\n  Route,\n  Layout,\n  EventEmitterProps,\n  PagerProps,\n  Listener,\n} from './types';\n\ntype Props<T extends Route> = PagerProps & {\n  layout: Layout;\n  onIndexChange: (index: number) => void;\n  navigationState: NavigationState<T>;\n  children: (\n    props: EventEmitterProps & {\n      // Animated value which represents the state of current index\n      // It can include fractional digits as it represents the intermediate value\n      position: Animated.AnimatedInterpolation;\n      // Function to actually render the content of the pager\n      // The parent component takes care of rendering\n      render: (children: React.ReactNode) => React.ReactNode;\n      // Callback to call when switching the tab\n      // The tab switch animation is performed even if the index in state is unchanged\n      jumpTo: (key: string) => void;\n    }\n  ) => React.ReactElement;\n};\n\nconst DEAD_ZONE = 12;\n\nconst DefaultTransitionSpec = {\n  timing: Animated.spring,\n  stiffness: 1000,\n  damping: 500,\n  mass: 3,\n  overshootClamping: true,\n};\n\nexport default function PanResponderAdapter<T extends Route>({\n  layout,\n  keyboardDismissMode = 'auto',\n  swipeEnabled = true,\n  navigationState,\n  onIndexChange,\n  onSwipeStart,\n  onSwipeEnd,\n  children,\n  style,\n}: Props<T>) {\n  const { routes, index } = navigationState;\n\n  const panX = useAnimatedValue(0);\n\n  const listenersRef = React.useRef<Listener[]>([]);\n\n  const navigationStateRef = React.useRef(navigationState);\n  const layoutRef = React.useRef(layout);\n  const onIndexChangeRef = React.useRef(onIndexChange);\n\n  const currentIndexRef = React.useRef(index);\n  const pendingIndexRef = React.useRef<number>();\n\n  const swipeVelocityThreshold = 0.15;\n  const swipeDistanceThreshold = layout.width / 1.75;\n\n  const jumpToIndex = React.useCallback(\n    (index: number) => {\n      const offset = -index * layoutRef.current.width;\n\n      const { timing, ...transitionConfig } = DefaultTransitionSpec;\n\n      Animated.parallel([\n        timing(panX, {\n          ...transitionConfig,\n          toValue: offset,\n          useNativeDriver: true,\n        }),\n      ]).start(({ finished }) => {\n        if (finished) {\n          setTimeout(() => onIndexChangeRef.current(index), 1000);\n\n          pendingIndexRef.current = undefined;\n        }\n      });\n\n      pendingIndexRef.current = index;\n    },\n    [panX]\n  );\n\n  React.useEffect(() => {\n    navigationStateRef.current = navigationState;\n    layoutRef.current = layout;\n    onIndexChangeRef.current = onIndexChange;\n  });\n\n  React.useEffect(() => {\n    const offset = -navigationStateRef.current.index * layout.width;\n\n    panX.setValue(offset);\n  }, [layout.width, panX]);\n\n  React.useEffect(() => {\n    if (keyboardDismissMode === 'auto') {\n      Keyboard.dismiss();\n    }\n\n    if (layout.width && currentIndexRef.current !== index) {\n      currentIndexRef.current = index;\n      jumpToIndex(index);\n    }\n  }, [jumpToIndex, keyboardDismissMode, layout.width, index]);\n\n  const isMovingHorizontally = (\n    _: GestureResponderEvent,\n    gestureState: PanResponderGestureState\n  ) => {\n    return (\n      Math.abs(gestureState.dx) > Math.abs(gestureState.dy * 2) &&\n      Math.abs(gestureState.vx) > Math.abs(gestureState.vy * 2)\n    );\n  };\n\n  const canMoveScreen = (\n    event: GestureResponderEvent,\n    gestureState: PanResponderGestureState\n  ) => {\n    if (swipeEnabled === false) {\n      return false;\n    }\n\n    const diffX = I18nManager.isRTL ? -gestureState.dx : gestureState.dx;\n\n    return (\n      isMovingHorizontally(event, gestureState) &&\n      ((diffX >= DEAD_ZONE && currentIndexRef.current > 0) ||\n        (diffX <= -DEAD_ZONE && currentIndexRef.current < routes.length - 1))\n    );\n  };\n\n  const startGesture = () => {\n    onSwipeStart?.();\n\n    if (keyboardDismissMode === 'on-drag') {\n      Keyboard.dismiss();\n    }\n\n    panX.stopAnimation();\n    // @ts-expect-error: _value is private, but docs use it as well\n    panX.setOffset(panX._value);\n  };\n\n  const respondToGesture = (\n    _: GestureResponderEvent,\n    gestureState: PanResponderGestureState\n  ) => {\n    const diffX = I18nManager.isRTL ? -gestureState.dx : gestureState.dx;\n\n    if (\n      // swiping left\n      (diffX > 0 && index <= 0) ||\n      // swiping right\n      (diffX < 0 && index >= routes.length - 1)\n    ) {\n      return;\n    }\n\n    if (layout.width) {\n      // @ts-expect-error: _offset is private, but docs use it as well\n      const position = (panX._offset + diffX) / -layout.width;\n      const next =\n        position > index ? Math.ceil(position) : Math.floor(position);\n\n      if (next !== index) {\n        listenersRef.current.forEach((listener) => listener(next));\n      }\n    }\n\n    panX.setValue(diffX);\n  };\n\n  const finishGesture = (\n    _: GestureResponderEvent,\n    gestureState: PanResponderGestureState\n  ) => {\n    panX.flattenOffset();\n\n    onSwipeEnd?.();\n\n    const currentIndex =\n      typeof pendingIndexRef.current === 'number'\n        ? pendingIndexRef.current\n        : currentIndexRef.current;\n\n    let nextIndex = currentIndex;\n\n    if (\n      Math.abs(gestureState.dx) > Math.abs(gestureState.dy) &&\n      Math.abs(gestureState.vx) > Math.abs(gestureState.vy) &&\n      (Math.abs(gestureState.dx) > swipeDistanceThreshold ||\n        Math.abs(gestureState.vx) > swipeVelocityThreshold)\n    ) {\n      nextIndex = Math.round(\n        Math.min(\n          Math.max(\n            0,\n            I18nManager.isRTL\n              ? currentIndex + gestureState.dx / Math.abs(gestureState.dx)\n              : currentIndex - gestureState.dx / Math.abs(gestureState.dx)\n          ),\n          routes.length - 1\n        )\n      );\n\n      currentIndexRef.current = nextIndex;\n    }\n\n    if (!isFinite(nextIndex)) {\n      nextIndex = currentIndex;\n    }\n\n    jumpToIndex(nextIndex);\n  };\n\n  // TODO: use the listeners\n  const addEnterListener = React.useCallback((listener: Listener) => {\n    listenersRef.current.push(listener);\n\n    return () => {\n      const index = listenersRef.current.indexOf(listener);\n\n      if (index > -1) {\n        listenersRef.current.splice(index, 1);\n      }\n    };\n  }, []);\n\n  const jumpTo = React.useCallback(\n    (key: string) => {\n      const index = navigationStateRef.current.routes.findIndex(\n        (route: { key: string }) => route.key === key\n      );\n\n      jumpToIndex(index);\n    },\n    [jumpToIndex]\n  );\n\n  const panResponder = PanResponder.create({\n    onMoveShouldSetPanResponder: canMoveScreen,\n    onMoveShouldSetPanResponderCapture: canMoveScreen,\n    onPanResponderGrant: startGesture,\n    onPanResponderMove: respondToGesture,\n    onPanResponderTerminate: finishGesture,\n    onPanResponderRelease: finishGesture,\n    onPanResponderTerminationRequest: () => true,\n  });\n\n  const maxTranslate = layout.width * (routes.length - 1);\n  const translateX = Animated.multiply(\n    panX.interpolate({\n      inputRange: [-maxTranslate, 0],\n      outputRange: [-maxTranslate, 0],\n      extrapolate: 'clamp',\n    }),\n    I18nManager.isRTL ? -1 : 1\n  );\n\n  return children({\n    position: layout.width\n      ? Animated.divide(panX, -layout.width)\n      : new Animated.Value(index),\n    addEnterListener,\n    jumpTo,\n    render: (children) => (\n      <Animated.View\n        style={[\n          styles.sheet,\n          layout.width\n            ? {\n                width: routes.length * layout.width,\n                transform: [{ translateX }],\n              }\n            : null,\n          style,\n        ]}\n        {...panResponder.panHandlers}\n      >\n        {React.Children.map(children, (child, i) => {\n          const route = routes[i];\n          const focused = i === index;\n\n          return (\n            <View\n              key={route.key}\n              style={\n                layout.width\n                  ? { width: layout.width }\n                  : focused\n                  ? StyleSheet.absoluteFill\n                  : null\n              }\n            >\n              {focused || layout.width ? child : null}\n            </View>\n          );\n        })}\n      </Animated.View>\n    ),\n  });\n}\n\nconst styles = StyleSheet.create({\n  sheet: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'stretch',\n  },\n});\n"]}