{"version":3,"sources":["PagerViewAdapter.tsx"],"names":["AnimatedViewPager","Animated","createAnimatedComponent","ViewPager","PagerViewAdapter","keyboardDismissMode","swipeEnabled","navigationState","onIndexChange","onSwipeStart","onSwipeEnd","children","style","rest","index","listenersRef","React","useRef","pagerRef","indexRef","navigationStateRef","routesRef","position","offset","useEffect","current","routes","forEach","route","key","jumpTo","useCallback","setPage","onPageScrollStateChanged","state","pageScrollState","nativeEvent","subscription","addListener","value","next","Math","ceil","floor","listener","removeListener","addEnterListener","push","indexOf","splice","add","render","styles","container","event","useNativeDriver","e","StyleSheet","create","flex"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet } from 'react-native';\nimport ViewPager, {\n  PageScrollStateChangedNativeEvent,\n} from 'react-native-pager-view';\nimport useAnimatedValue from './useAnimatedValue';\nimport type {\n  NavigationState,\n  Route,\n  Listener,\n  EventEmitterProps,\n  PagerProps,\n} from './types';\n\nconst AnimatedViewPager = Animated.createAnimatedComponent(ViewPager);\n\ntype Props<T extends Route> = PagerProps & {\n  onIndexChange: (index: number) => void;\n  navigationState: NavigationState<T>;\n  children: (\n    props: EventEmitterProps & {\n      // Animated value which represents the state of current index\n      // It can include fractional digits as it represents the intermediate value\n      position: Animated.AnimatedInterpolation;\n      // Function to actually render the content of the pager\n      // The parent component takes care of rendering\n      render: (children: React.ReactNode) => React.ReactNode;\n      // Callback to call when switching the tab\n      // The tab switch animation is performed even if the index in state is unchanged\n      jumpTo: (key: string) => void;\n    }\n  ) => React.ReactElement;\n};\n\nexport default function PagerViewAdapter<T extends Route>({\n  keyboardDismissMode = 'auto',\n  swipeEnabled = true,\n  navigationState,\n  onIndexChange,\n  onSwipeStart,\n  onSwipeEnd,\n  children,\n  style,\n  ...rest\n}: Props<T>) {\n  const { index } = navigationState;\n\n  const listenersRef = React.useRef<Listener[]>([]);\n\n  const pagerRef = React.useRef<ViewPager>();\n  const indexRef = React.useRef<number>(index);\n  const navigationStateRef = React.useRef(navigationState);\n  const routesRef = React.useRef<Record<string, number>>({});\n\n  const position = useAnimatedValue(index);\n  const offset = useAnimatedValue(0);\n\n  React.useEffect(() => {\n    navigationStateRef.current = navigationState;\n\n    navigationState.routes.forEach((route: { key: string }, index: number) => {\n      routesRef.current[route.key] = index;\n    });\n  });\n\n  const jumpTo = React.useCallback((key: string) => {\n    const index = routesRef.current[key];\n\n    pagerRef.current?.setPage(index);\n  }, []);\n\n  const onPageScrollStateChanged = (\n    state: PageScrollStateChangedNativeEvent\n  ) => {\n    const { pageScrollState } = state.nativeEvent;\n\n    switch (pageScrollState) {\n      case 'idle':\n        onSwipeEnd?.();\n        return;\n      case 'dragging': {\n        const subscription = offset.addListener(({ value }) => {\n          const next =\n            index + (value > 0 ? Math.ceil(value) : Math.floor(value));\n\n          if (next !== index) {\n            listenersRef.current.forEach((listener) => listener(next));\n          }\n\n          offset.removeListener(subscription);\n        });\n\n        onSwipeStart?.();\n        return;\n      }\n    }\n  };\n\n  const addEnterListener = React.useCallback((listener: Listener) => {\n    listenersRef.current.push(listener);\n\n    return () => {\n      const index = listenersRef.current.indexOf(listener);\n\n      if (index > -1) {\n        listenersRef.current.splice(index, 1);\n      }\n    };\n  }, []);\n\n  return children({\n    position: Animated.add(position, offset),\n    addEnterListener,\n    jumpTo,\n    render: (children) => (\n      <AnimatedViewPager\n        {...rest}\n        ref={pagerRef}\n        style={[styles.container, style]}\n        initialPage={index}\n        keyboardDismissMode={\n          keyboardDismissMode === 'auto' ? 'on-drag' : keyboardDismissMode\n        }\n        onPageScroll={Animated.event(\n          [\n            {\n              nativeEvent: {\n                position: position,\n                offset: offset,\n              },\n            },\n          ],\n          { useNativeDriver: true }\n        )}\n        onPageSelected={(e) => {\n          const index = e.nativeEvent.position;\n          indexRef.current = index;\n          onIndexChange(index);\n        }}\n        onPageScrollStateChanged={onPageScrollStateChanged}\n        scrollEnabled={swipeEnabled}\n      >\n        {children}\n      </AnimatedViewPager>\n    ),\n  });\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n"]}